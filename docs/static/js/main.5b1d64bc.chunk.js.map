{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAa,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB3C,OACI,sBAAMC,SAZU,SAACC,GACjBA,EAAEC,iBACFC,QAAQC,IAAI,MAGTN,EAAWO,OAAOC,OAAS,IAC1BV,GAAe,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACxCR,EAAc,MAKlB,SACI,uBACAS,KAAO,OACPC,MAASX,EACTY,SApBiB,SAACT,GACvBF,EAAgBE,EAAEU,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAQf,EAAMgB,IAAON,IAC1B,4BAAKA,QCFJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECCX,SAACA,GAAc,IAAD,EAEVhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAqBtC,OAdAC,qBAAW,WACPxB,EAAUC,GAAWwB,MAAM,SAAAC,GAInBH,EAAU,CACNf,KAAMkB,EACNL,SAAS,UAOlBC,EDpB0BK,CAAc1B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAYrB,OACI,qCACI,6BAAMpB,IAEJoB,GAAW,2CAEb,qBAAMJ,UAAY,YAAlB,SAEUH,EAAOJ,KAAK,SAAAC,GAAG,OACL,cAAC,EAAD,eAEIA,GADIA,EAAIC,aExB/BgB,EAAe,WAAO,IAAD,EAEM3C,mBAAU,CAAC,cAFjB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAW9B,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,6BAEQ6C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCnBpC6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b1d64bc.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory= ({setCategories}) => {\n\n   const [inputValue, setinputValue] = useState('');\n\n   const handleInputChange = (e) => {\n       setinputValue ( e.target.value );\n   }\n\n   const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('ok')\n\n\n        if(inputValue.trim().length > 2) {\n            setCategories( cats => [ inputValue, ...cats] );\n            setinputValue('');\n        }\n   }\n\n    return (\n        <form onSubmit = {handleSubmit}>\n            <input \n            type = \"text\"\n            value = {inputValue}\n            onChange = { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async (category) => {\n        \n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=97bVykvXdFRh8Duj70yN0XBQ0T5PVhBg`\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    } )\n\n    // console.log(data);\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\n            <img src = { url } alt= { title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    /* const [images, setImages] = useState([]);\n\n    \n\n    useEffect( () => {\n        getGifs( category ).then( setImages ) //then( imgs =>  setImages (imgs)) // es lo mismo\n    }, [category])\n\n     */\n    \n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading...</p> }\n\n            <div  className = \"card-grid\" >\n                \n                    { images.map( img => (\n                                <GifGridItem \n                                key = { img.id }\n                                {...img} \n                                />\n                            )\n                        )\n                    }\n            </div>\n\n        </>\n\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFetchGifs = (category) => {\n    \n    const [ state, setState ] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs ( category ).then( imgs => {\n\n            \n\n                setState( {\n                    data: imgs,\n                    loading: false\n                } );\n\n\n        })\n    } )\n\n    return state; // {  }\n\n}\n","import React, { useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState( ['One Piece'] );\n\nconst handleAdd = ( ) => {\n\n    // setCategories( ['Sakura', ... categories] );\n    // setCategories( cats => [...cats, 'Sakura']);\n\n}\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <hr/>\n            <AddCategory setCategories= { setCategories } />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key = { category }\n                            category = { category } \n                        />\n                    ) )\n                }\n            </ol>\n        </div>\n    )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}